/**
 * drivers/serial/st7735.c
 *
 * Copyright (C) 2009 Manuel Stahl <manuel.stahl@iis.fraunhofer.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * The st7735 device is a SPI driven dual UART with GPIOs.
 *
 * The driver exports two uarts and a gpiochip interface.
 */

#ifndef _ST7735_H_
#define _ST7735_H_

#include <linux/ioctl.h>


/* 定义幻数 */
#define ST7735IOC_MAGIC  'k'

typedef unsigned int			uint32;
typedef int						int32;
typedef unsigned short int		uint16;
typedef short int				int16;
typedef unsigned char			uint8;
typedef char					int8;

#define WHITE				 0xFFFF
#define BLACK				 0  
#define BLUE			 0x001F  
#define BRED             0XF81F
#define GRED			 0XFFE0
#define GBLUE				0X07FF
#define RED				 0xF800
#define MAGENTA			 0xF81F
#define GREEN				 0x07E0
#define CYAN				 0x7FFF
#define YELLOW			 0xFFE0
#define BROWN				 0XBC40 //棕色
#define BRRED				 0XFC07 //棕红色
#define GRAY				 0X8430 //灰色
#define DARKBLUE			 0X01CF//深蓝色
#define LIGHTBLUE			 0X7D7C//浅蓝色  
#define GRAYBLUE			 0X5458 //灰蓝色
#define LIGHTGREEN		 0X841F //浅绿色
#define LGRAY			 0XC618 //浅灰色(PANNEL),窗体背景色

#define LGRAYBLUE        0XA651 //浅灰蓝色(中间层颜色)
#define LBBLUE           0X2B12 //浅棕蓝色(选择条目的反色)

enum{
	NR_INIT = 0,
	NR_UNINT,
	NR_SET_FOREGROUND_COLOR,
	NR_SET_BACKGROUND_COLOR,
	NR_CLEAR,
	NR_DRAW_POINT,
	NR_DRAW_LINE,
	NR_DRAW_RECTANGLE,
	NR_FILL_RECTANGLE,
	NR_SHOW_STRING,
	NR_DRAW_CIRCLE,
	NR_FILL_CIRCLE,
	NR_DRAW_ELLIPSE,
	NR_FILL_ELLIPSE,
	NR_DRAW_ARC,
	NR_DISPLAY_ON,
	NR_DISPLAY_OFF,
	NR_SET_FONT,
	NR_DRAW_BITMAP,
	NR_BACKLIGHT_ON,
	NR_BACKLIGHT_OFF,


	NR_IOC_MAX,
};
struct color
{
	uint16		m_color;
};
struct coordinate                                     
{                                                        
	uint16		m_x;
	uint16		m_y;
};
struct coordinate_pair                                     
{                                                        
	uint16		m_x1;
	uint16		m_y1;
	uint16		m_x2;
	uint16		m_y2;
};
struct circle                                     
{                                                        
	uint16		m_x;
	uint16		m_y;
	uint8		m_r;
};
struct arc                                     
{                                                        
	uint16		m_x;
	uint16		m_y;
	u1nt16		m_r;
	u1nt16		m_stangle;
	u1nt16		m_endangle;
};

/* 定义命令 */
#define ST7735IOC_INIT			_IO(ST7735IOC_MAGIC, NR_INIT)
#define ST7735IOC_UNINIT		_IO(ST7735IOC_MAGIC, NR_UNINT)
#define ST7735IOC_BACKLIGHT_ON	_IO(ST7735IOC_MAGIC, NR_BACKLIGHT_ON)
#define ST7735IOC_BACKLIGHT_OFF	_IO(ST7735IOC_MAGIC, NR_BACKLIGHT_OFF)
#define ST7735IOC_DISPLAY_ON	_IO(ST7735IOC_MAGIC, NR_DISPLAY_ON)
#define ST7735IOC_DISPLAY_OFF	_IO(ST7735IOC_MAGIC, NR_DISPLAY_OFF)
#define ST7735IOC_SET_FOREGROUND_COLOR	_IOW(ST7735IOC_MAGIC, \
									NR_SET_FOREGROUND_COLOR, struct color)
#define ST7735IOC_SET_BACKGROUND_COLOR	_IOW(ST7735IOC_MAGIC, \
									NR_SET_BACKGROUND_COLOR, struct color)
#define ST7735IOC_CLEAR			_IO(ST7735IOC_MAGIC, NR_CLEAR)
#define ST7735IOC_DRAW_POINT	_IOW(ST7735IOC_MAGIC, \
									NR_DRAW_POINT, struct coordinate)
#define ST7735IOC_DRAW_LINE	_IOW(ST7735IOC_MAGIC, \
									NR_DRAW_LINE, struct coordinate_pair)
#define ST7735IOC_DRAW_RECTANGLE	_IOW(ST7735IOC_MAGIC, \
									NR_DRAW_RECTANGLE, struct coordinate_pair)
#define ST7735IOC_FILL_RECTANGLE	_IOW(ST7735IOC_MAGIC, \
									NR_FILL_RECTANGLE, struct coordinate_pair)
#define ST7735IOC_DRAW_CIRCLE	_IOW(ST7735IOC_MAGIC, \
									NR_DRAW_CIRCLE, struct circle)
#define ST7735IOC_FILL_CIRCLE	_IOW(ST7735IOC_MAGIC, \
									NR_FILL_CIRCLE, struct circle)
#define ST7735IOC_DRAW_ELLIPSE	_IOW(ST7735IOC_MAGIC, \
									NR_DRAW_ELLIPSE, struct coordinate_pair)
#define ST7735IOC_FILL_ELLIPSE	_IOW(ST7735IOC_MAGIC, \
									NR_FILL_ELLIPSE, struct coordinate_pair)



//#define ST7735IOCGETDATA _IOR(ST7735IOC_MAGIC, 2, int)
//#define ST7735IOCSETDATA _IOW(ST7735IOC_MAGIC, 3, int)






#endif


